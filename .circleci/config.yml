version: 2.1
jobs:
  build:
    docker:
      - image: google/cloud-sdk
    environment:
      IMAGE_NAME: jparrauguina/hola-docker
    working_directory: ~/app
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Push Docker Image
          command: |
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$CIRCLE_SHA1
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$CIRCLE_SHA1
      - run:
          name: Install envsubst
          command: |
             apt-get update && apt-get -y install gettext-base
      - run:
          name: Install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod u+x ./kubectl
      #- run:
       #   name: Install Google SDK
        #  command: |
         #   curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-343.0.0-linux-x86_64.tar.gz
          #  tar xvzf ./google-cloud-sdk-343.0.0-linux-x86_64.tar.gz
           # cd ./google-cloud-sdk
            #/bin/bash ./install.sh --quiet
            #gcloud init
            #echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            #gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            #gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run:
         name: Start Google SDK
         command: |
           echo ${GCLOUD_SERVICE_KEY} > /tmp/sa_key.json
           gcloud auth activate-service-account --key-file=/tmp/sa_key.json
           rm /tmp/sa_key.json
           gcloud config set project utopian-outlet-313415
           gcloud config set compute/region us-central1
      - run:
          name: Deploy Code
          command: sh ./.circleci/scripts/ci-deploy.sh
workflows:
  version: 2
  build-master:
    jobs:
      - build:
          filters:
            branches:
              only: master
